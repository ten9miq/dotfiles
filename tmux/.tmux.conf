# config reload
bind ! source-file ~/.tmux.conf\; display-message "Reload Config!!"
# バージョンでtmuxの設定の記載方法が変わるため、Tmuxのバージョンでの切り替えのために環境変数を作成
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# tmux上で256色で表示できるようにする
# set -g terminal-overrides 'xterm:colors=256'
# set -g default-terminal "xterm-256color" # vimの色が256色で表示してくれなくなった
set -g default-terminal "screen-256color"

# デフォルト起動時のshellをデフォルトshellに合わせる
set -g default-shell "${SHELL}"

# change prefix / screenと同じくctrl+zをprefix-keyに変更
unbind-key C-b
# set-option -g prefix C-z
# bind-key C-z send-prefix
# change prefixはCtrl+zだとvimの中断と衝突するのでCtrl+sへ変更
# Ctrl+sもNERDTreeToggleのコマンドと衝突していたのでCtrl+Spaceへ変更
set -g prefix C-Space
bind-key C-Space send-prefix

# escape time   Vim+tmuxで使っていると<Esc>キーを押したときにノーマルモードへ移行するのがなんか遅い問題の対策
set -s escape-time 0

# スクロールバッファサイズ
set-option -g history-limit 10000

# use UTF-8
# setw -g utf8 on
# set -g status-utf8 on

# change key bind like vim when copy mode / vim likeな操作性に変更
set-window-option -g mode-keys vi

# change key bind like vim when split window
# 水平分割
bind s split-window -v
# 垂直分割
bind v split-window -h

# hjklで分割したpaneを移動
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# HJKLでpaneのリサイズ
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# tmuxの切り替え
# bind Space choose-window

# set -g status-fg cyan
# set -g status-bg black

set -g status-left-length 90
set -g status-left '#[fg=white,bg=black]#H#[fg=white]:#[fg=white][#S#[fg=white] = #P]#[default]'
set -g status-right-length 90
set -g status-right '#[fg=black,bg=cyan,bold] #[fg=white][%Y-%m-%d(%a) %H:%M:%S]#[default]'
set -g status-position bottom
# ステータスバーを1秒毎に描画し直す
set -g status-interval 1
# センタライズ（主にウィンドウ番号など）
set -g status-justify centre

setw -g window-status-current-format '#{?pane_synchronized,#[fg=white bg=black bold],}#[underscore][#I:#W]'
setw -g window-status-format        '#{?pane_synchronized,#[fg=white bg=black],}#I:#W#[]'

# pane-active-border
if-shell -b '[ "$(echo "$TMUX_VERSION < 1.9" | bc)" -eq 1 ]' \
        "set -g pane-active-border-fg green;"
if-shell -b '[ "$(echo "$TMUX_VERSION >= 1.9" | bc)" -eq 1 ]' \
        "set -g pane-active-border-style fg=green;"

# logging
# rでロギング開始
bind-key r pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S\")] \${LINE}\" >> \${HOME}/.tmux/\$(date +%Y%m%d_%H%M%S)-\$(tmux-pane-ssh-hostname #{pane_current_command} #{pane_pid})-#S-#I.#P.log; done "' \; display-message "Logging start."
# #S セッションインデックス
# #I ウインドウインデックス
# #P ペインインデックス
# Rでロギング終了
bind-key R pipe-pane \; display-message "Logging end."

# スクロール時にレスポンスがなくなる対策
# http://askubuntu.com/questions/315796/tmux-becomes-unresponsive-when-tailing-a-quickly-updated-file
#set -g c0-change-trigger 20 #default is 250
#set -g c0-change-interval 1000 #default is 100

# prefix+PageUpでtmux上でログを追うモードになる
bind -n Pageup copy-mode -u

# マウス(or トラックパッド)でのスクロールの設定
set-window-option -g mode-keys vi

# ウィンドウ内の全ペインに同じ操作を行う
bind a setw synchronize-panes \; display "synchronize-panes #{?pane_synchronized,on,off}"\; if-shell 'test #{pane_synchronized} -eq 1' 'setw pane-border-style "fg=yellow"; setw pane-active-border-style "fg=red"' 'setw pane-border-style fg=white; setw pane-active-border-style "fg=green"'

set-option -g pane-border-status bottom
set-option -g pane-border-format " #P #(tmux-pane-ssh-hostname #{pane_current_command} #{pane_pid})"
